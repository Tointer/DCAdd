"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./flow/metronome.ts":
/*!***************************!*\
  !*** ./flow/metronome.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getIncomingStreams\": function() { return /* binding */ getIncomingStreams; },\n/* harmony export */   \"setupDCA\": function() { return /* binding */ setupDCA; }\n/* harmony export */ });\n/* harmony import */ var _onflow_fcl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @onflow/fcl */ \"./node_modules/@onflow/fcl/dist/fcl.module.js\");\n// @ts-expect-error: no typing\n\nconst setupDCA = async (duration, amount)=>{\n    console.log({\n        duration,\n        amount\n    });\n    const transactionId = await _onflow_fcl__WEBPACK_IMPORTED_MODULE_0__.mutate({\n        cadence: '\\n    import FungibleToken from 0xFungibleToken\\n    import DCAdd from 0xMetronome\\n    mport FiatToken from 0xUsdcToken\\n    \\n    transaction(duration: UFix64, amount: UFix64) {\\n    \\n      prepare(acct: AuthAccount) {\\n          var inReceiverCapability = acct.getCapability<&FungibleToken.Vault{FungibleToken.Receiver}>(FiatToken.VaultReceiverPubPath)\\n          var outReceiverCapability = acct.getCapability<&FungibleToken.Vault{FungibleToken.Receiver}>(/public/flowTokenReceiver)\\n          var ownerProviderCapability = acct.borrow<&FungibleToken.Vault>(from: /storage/FiatToken)\\n                ?? panic(\"Could not borrow reference to the owner\\'s Vault!\")\\n          var currentTime = getCurrentBlock().timestamp\\n    \\n          var vault <- ownerProviderCapability.withdraw(amount: amount)\\n    \\n    \\n          DCAdd.deposit(vault: <- vault,\\n            endTime: currentTime+duration,\\n            inReceiver: inReceiverCapability,\\n            outReceiver: outReceiverCapability)\\n      }\\n    }\\n    ',\n        payer: _onflow_fcl__WEBPACK_IMPORTED_MODULE_0__.authz,\n        proposer: _onflow_fcl__WEBPACK_IMPORTED_MODULE_0__.authz,\n        authorizations: [\n            _onflow_fcl__WEBPACK_IMPORTED_MODULE_0__.authz\n        ],\n        args: (arg, t)=>[\n                arg(duration, t.UFix64),\n                arg(amount, t.UFix64)\n            ],\n        limit: 9999\n    });\n    const transaction = await _onflow_fcl__WEBPACK_IMPORTED_MODULE_0__.tx(transactionId).onceSealed();\n    console.log(transaction);\n};\nconst getIncomingStreams = async (userAddress)=>{\n    try {\n        const streamIn = await _onflow_fcl__WEBPACK_IMPORTED_MODULE_0__.query({\n            cadence: \"\\n      import Lumi from 0xLumi\\n      \\n      pub fun main(account: Address): [Lumi.Stream] {\\n        var res: [Lumi.Stream] = []\\n    \\n        for key in Lumi.toDestinationSources[account]!.keys {\\n            var sender = Lumi.toDestinationSources[account]![key]!\\n            let lumiStreamGetter = getAccount(sender).getCapability<&Lumi.SourceCollection{Lumi.StreamInfoGetter}>(/public/mainGetter)\\n    \\n            res.append(lumiStreamGetter.borrow()!.getInfo(id: key)) \\n        }\\n    \\n        return res\\n      }\\n    \",\n            args: (arg, t)=>[\n                    arg(userAddress, t.Address)\n                ]\n        });\n        return streamIn;\n    } catch (e) {\n        return [];\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9mbG93L21ldHJvbm9tZS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSw4QkFBOEI7QUFDSztBQUU1QixNQUFNQyxXQUFXLE9BQU9DLFVBQWtCQyxTQUFtQjtJQUNsRUMsUUFBUUMsR0FBRyxDQUFDO1FBQUVIO1FBQVVDO0lBQU87SUFDL0IsTUFBTUcsZ0JBQWdCLE1BQU1OLCtDQUFVLENBQUM7UUFDckNRLFNBQVU7UUF3QlZDLE9BQU9ULDhDQUFTO1FBQ2hCVyxVQUFVWCw4Q0FBUztRQUNuQlksZ0JBQWdCO1lBQUNaLDhDQUFTO1NBQUM7UUFDM0JhLE1BQU0sQ0FBQ0MsS0FBVUMsSUFBVztnQkFDMUJELElBQUlaLFVBQVVhLEVBQUVDLE1BQU07Z0JBQ3RCRixJQUFJWCxRQUFRWSxFQUFFQyxNQUFNO2FBQ3JCO1FBQ0RDLE9BQU87SUFDVDtJQUVBLE1BQU1DLGNBQWMsTUFBTWxCLDJDQUFNLENBQUNNLGVBQWVjLFVBQVU7SUFDMURoQixRQUFRQyxHQUFHLENBQUNhO0FBQ2QsRUFBRTtBQUVLLE1BQU1HLHFCQUFxQixPQUFPQyxjQUF3QjtJQUMvRCxJQUFJO1FBQ0YsTUFBTUMsV0FBVyxNQUFNdkIsOENBQVMsQ0FBQztZQUMvQlEsU0FBVTtZQWdCVkssTUFBTSxDQUFDQyxLQUFVQyxJQUFXO29CQUFDRCxJQUFJUSxhQUFhUCxFQUFFVSxPQUFPO2lCQUFFO1FBQzNEO1FBQ0EsT0FBT0Y7SUFDVCxFQUFFLFVBQU07UUFDTixPQUFPLEVBQUU7SUFDWDtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vZmxvdy9tZXRyb25vbWUudHM/ZjFlZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtZXhwZWN0LWVycm9yOiBubyB0eXBpbmdcbmltcG9ydCAqIGFzIGZjbCBmcm9tIFwiQG9uZmxvdy9mY2xcIjtcblxuZXhwb3J0IGNvbnN0IHNldHVwRENBID0gYXN5bmMgKGR1cmF0aW9uOiBzdHJpbmcsIGFtb3VudDogc3RyaW5nKSA9PiB7XG4gIGNvbnNvbGUubG9nKHsgZHVyYXRpb24sIGFtb3VudCB9KTtcbiAgY29uc3QgdHJhbnNhY3Rpb25JZCA9IGF3YWl0IGZjbC5tdXRhdGUoe1xuICAgIGNhZGVuY2U6IGBcbiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlblxuICAgIGltcG9ydCBEQ0FkZCBmcm9tIDB4TWV0cm9ub21lXG4gICAgbXBvcnQgRmlhdFRva2VuIGZyb20gMHhVc2RjVG9rZW5cbiAgICBcbiAgICB0cmFuc2FjdGlvbihkdXJhdGlvbjogVUZpeDY0LCBhbW91bnQ6IFVGaXg2NCkge1xuICAgIFxuICAgICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkge1xuICAgICAgICAgIHZhciBpblJlY2VpdmVyQ2FwYWJpbGl0eSA9IGFjY3QuZ2V0Q2FwYWJpbGl0eTwmRnVuZ2libGVUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oRmlhdFRva2VuLlZhdWx0UmVjZWl2ZXJQdWJQYXRoKVxuICAgICAgICAgIHZhciBvdXRSZWNlaXZlckNhcGFiaWxpdHkgPSBhY2N0LmdldENhcGFiaWxpdHk8JkZ1bmdpYmxlVG9rZW4uVmF1bHR7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvZmxvd1Rva2VuUmVjZWl2ZXIpXG4gICAgICAgICAgdmFyIG93bmVyUHJvdmlkZXJDYXBhYmlsaXR5ID0gYWNjdC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL0ZpYXRUb2tlbilcbiAgICAgICAgICAgICAgICA/PyBwYW5pYyhcIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0IVwiKVxuICAgICAgICAgIHZhciBjdXJyZW50VGltZSA9IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcFxuICAgIFxuICAgICAgICAgIHZhciB2YXVsdCA8LSBvd25lclByb3ZpZGVyQ2FwYWJpbGl0eS53aXRoZHJhdyhhbW91bnQ6IGFtb3VudClcbiAgICBcbiAgICBcbiAgICAgICAgICBEQ0FkZC5kZXBvc2l0KHZhdWx0OiA8LSB2YXVsdCxcbiAgICAgICAgICAgIGVuZFRpbWU6IGN1cnJlbnRUaW1lK2R1cmF0aW9uLFxuICAgICAgICAgICAgaW5SZWNlaXZlcjogaW5SZWNlaXZlckNhcGFiaWxpdHksXG4gICAgICAgICAgICBvdXRSZWNlaXZlcjogb3V0UmVjZWl2ZXJDYXBhYmlsaXR5KVxuICAgICAgfVxuICAgIH1cbiAgICBgLFxuICAgIHBheWVyOiBmY2wuYXV0aHosXG4gICAgcHJvcG9zZXI6IGZjbC5hdXRoeixcbiAgICBhdXRob3JpemF0aW9uczogW2ZjbC5hdXRoel0sXG4gICAgYXJnczogKGFyZzogYW55LCB0OiBhbnkpID0+IFtcbiAgICAgIGFyZyhkdXJhdGlvbiwgdC5VRml4NjQpLFxuICAgICAgYXJnKGFtb3VudCwgdC5VRml4NjQpLFxuICAgIF0sXG4gICAgbGltaXQ6IDk5OTksXG4gIH0pO1xuXG4gIGNvbnN0IHRyYW5zYWN0aW9uID0gYXdhaXQgZmNsLnR4KHRyYW5zYWN0aW9uSWQpLm9uY2VTZWFsZWQoKTtcbiAgY29uc29sZS5sb2codHJhbnNhY3Rpb24pO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEluY29taW5nU3RyZWFtcyA9IGFzeW5jICh1c2VyQWRkcmVzczogc3RyaW5nKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3Qgc3RyZWFtSW4gPSBhd2FpdCBmY2wucXVlcnkoe1xuICAgICAgY2FkZW5jZTogYFxuICAgICAgaW1wb3J0IEx1bWkgZnJvbSAweEx1bWlcbiAgICAgIFxuICAgICAgcHViIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiBbTHVtaS5TdHJlYW1dIHtcbiAgICAgICAgdmFyIHJlczogW0x1bWkuU3RyZWFtXSA9IFtdXG4gICAgXG4gICAgICAgIGZvciBrZXkgaW4gTHVtaS50b0Rlc3RpbmF0aW9uU291cmNlc1thY2NvdW50XSEua2V5cyB7XG4gICAgICAgICAgICB2YXIgc2VuZGVyID0gTHVtaS50b0Rlc3RpbmF0aW9uU291cmNlc1thY2NvdW50XSFba2V5XSFcbiAgICAgICAgICAgIGxldCBsdW1pU3RyZWFtR2V0dGVyID0gZ2V0QWNjb3VudChzZW5kZXIpLmdldENhcGFiaWxpdHk8Jkx1bWkuU291cmNlQ29sbGVjdGlvbntMdW1pLlN0cmVhbUluZm9HZXR0ZXJ9PigvcHVibGljL21haW5HZXR0ZXIpXG4gICAgXG4gICAgICAgICAgICByZXMuYXBwZW5kKGx1bWlTdHJlYW1HZXR0ZXIuYm9ycm93KCkhLmdldEluZm8oaWQ6IGtleSkpIFxuICAgICAgICB9XG4gICAgXG4gICAgICAgIHJldHVybiByZXNcbiAgICAgIH1cbiAgICBgLFxuICAgICAgYXJnczogKGFyZzogYW55LCB0OiBhbnkpID0+IFthcmcodXNlckFkZHJlc3MsIHQuQWRkcmVzcyldLFxuICAgIH0pO1xuICAgIHJldHVybiBzdHJlYW1JbjtcbiAgfSBjYXRjaCB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG59O1xuIl0sIm5hbWVzIjpbImZjbCIsInNldHVwRENBIiwiZHVyYXRpb24iLCJhbW91bnQiLCJjb25zb2xlIiwibG9nIiwidHJhbnNhY3Rpb25JZCIsIm11dGF0ZSIsImNhZGVuY2UiLCJwYXllciIsImF1dGh6IiwicHJvcG9zZXIiLCJhdXRob3JpemF0aW9ucyIsImFyZ3MiLCJhcmciLCJ0IiwiVUZpeDY0IiwibGltaXQiLCJ0cmFuc2FjdGlvbiIsInR4Iiwib25jZVNlYWxlZCIsImdldEluY29taW5nU3RyZWFtcyIsInVzZXJBZGRyZXNzIiwic3RyZWFtSW4iLCJxdWVyeSIsIkFkZHJlc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./flow/metronome.ts\n"));

/***/ })

});